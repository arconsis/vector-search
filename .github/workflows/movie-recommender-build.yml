name: Movie Recommender Build

on:
  push:
    branches: [ main, feature/add-pipelines ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  packages: write

jobs:
  build:
    name: build & push
    runs-on: ubuntu-latest

    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          logout: true

      - name: Build & Push
        uses: docker/build-push-action@v3
        with:
          context: ./MovieRecommender/backend
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:${{ github.sha }},ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:latest


  deploy:
    name: deploy
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v3

      - name: Create Remote Context
        uses: arwynfr/actions-docker-context@v2
        with:
          docker_host: 'ssh://${{ secrets.DEPLOY_USERNAME }}@${{ secrets.DEPLOY_HOST }}'
          context_name: server
          ssh_cert: ${{ secrets.DEPLOY_SERVER_PUBLIC_KEY }}
          ssh_key: ${{ secrets.DEPLOY_SSH_PRIVATE_KEY }}
          use_context: true

      - name: Login to GitHub Container Registry in Context
        uses: docker/login-action@v2
        with:
          registry: ghcr.io/${{ github.repository_owner }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          logout: true

      - name: Deploy with Compose
        env:
          CONTAINER_IMAGE: "ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:${{ github.sha }}"
        run: |
          echo "Compose before update:"
          docker compose ps
          echo "Update images..."
          docker-compose --context server pull
          echo "Deploying with compose..."
          docker-compose --context server up -d
          echo "Compose after update:"
          docker compose ps
          echo "Prune old images..."
          docker image prune -f
