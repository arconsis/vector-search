name: ImageSearchCoreService Build

on:
  push:
    branches: [ main, feature/add-pipelines ]
    paths:
      - "ImageSearchCoreService/**"
      - "helm/VectorSearch/**"
      - ".github/workflows/vector-search-build.yml"
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  packages: write

jobs:
  build:
    name: build & push
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'adopt'

    - name: assemble
      uses: gradle/gradle-build-action@v2
      with:
        arguments: assemble
        build-root-directory: ImageSearchCoreService

    - name: check
      uses: gradle/gradle-build-action@v2
      with:
        arguments: check
        build-root-directory: ImageSearchCoreService

    - name: build container
      uses: gradle/gradle-build-action@v2
      with:
        arguments: build -x test -Dquarkus.container-image.build=true
        build-root-directory: ImageSearchCoreService

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        logout: true

    - name: Push Container
      uses: gradle/gradle-build-action@v2
      with:
        arguments: build -x test -Dquarkus.container-image.push=true -Dquarkus.container-image.group=${{ github.repository_owner }}/${{ github.event.repository.name }} -Dquarkus.container-image.name=image-search-core-service -Dquarkus.container-image.registry=ghcr.io -Dquarkus.container-image.additional-tags=${{ github.sha }},latest
        build-root-directory: ImageSearchCoreService


  deploy:
    name: deploy to k8s
    runs-on: ubuntu-latest
    needs: build

    steps:
    - uses: actions/checkout@v3

    - uses: azure/setup-helm@v3
      id: install

    - uses: azure/k8s-set-context@v2
      with:
        method: kubeconfig
        kubeconfig: '${{ secrets.KUBECONFIG }}'

    - name: "Deploy with Helm"
      shell: bash
      run: |
        helm dep build helm/VectorSearch
        helm upgrade --install vector-search helm/VectorSearch --set image.tag=${{ github.sha }} --set tmdb.apiKey=${{ secrets.TMDB_API_KEY }}